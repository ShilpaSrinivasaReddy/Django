# Generated by Django 4.2.6 on 2023-10-29 22:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_name', models.CharField(db_column='Country_name', max_length=255, primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(db_column='Latitude', decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(db_column='Longitude', decimal_places=6, max_digits=9)),
            ],
            options={
                'db_table': 'country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Finance',
            fields=[
                ('data', models.DateField(db_column='Data', primary_key=True, serialize=False)),
                ('risparmio_energetico', models.FloatField(blank=True, db_column='Risparmio_Energetico', null=True)),
                ('generazione_elettrica', models.FloatField(blank=True, db_column='Generazione_Elettrica', null=True)),
                ('ricavi', models.FloatField(blank=True, db_column='Ricavi', null=True)),
                ('spese', models.FloatField(blank=True, db_column='Spese', null=True)),
                ('utile_netto', models.FloatField(blank=True, db_column='Utile_Netto', null=True)),
                ('ritorno_sull_investimento', models.FloatField(blank=True, db_column='Ritorno_sull_Investimento', null=True)),
                ('spesa_di_ammortamento', models.FloatField(blank=True, db_column='Spesa_di_Ammortamento', null=True)),
                ('tasse_pagate', models.FloatField(blank=True, db_column='Tasse_Pagate', null=True)),
                ('flusso_di_cassa_netto', models.FloatField(blank=True, db_column='Flusso_di_Cassa_Netto', null=True)),
            ],
            options={
                'db_table': 'finance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SampleWeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_utc', models.TextField(blank=True, null=True)),
                ('temperatura_2m', models.TextField(blank=True, null=True)),
                ('umidita_relativa', models.TextField(blank=True, null=True)),
                ('velocita_vento_10m', models.TextField(blank=True, null=True)),
                ('precipitazioni', models.TextField(blank=True, null=True)),
                ('bni', models.TextField(blank=True, null=True)),
                ('dhi', models.TextField(blank=True, null=True)),
                ('ghi', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sample_weather_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeatherInfo',
            fields=[
                ('datetime_utc', models.DateTimeField(primary_key=True, serialize=False)),
                ('temperatura_2m', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('umidita_relativa', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('velocita_vento_10m', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('precipitazioni', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('bni', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('dhi', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ghi', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'weather_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FotoVoltaico',
            fields=[
                ('datetime_utc', models.OneToOneField(db_column='datetime_utc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='appEMS.weatherinfo')),
                ('solarimetro', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('stato_01', models.CharField(blank=True, max_length=255, null=True)),
                ('temperatura_mandata', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('temperatura_pannello', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('temperatura_ritorno', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'foto_voltaico',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GreenHouse',
            fields=[
                ('greenhouse_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('greenhouse_humidity', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('greenhouse_light_intensity', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('greenhouse_co2_level', models.DecimalField(blank=True, db_column='greenhouse_CO2_level', decimal_places=2, max_digits=5, null=True)),
                ('greenhouse_start_time', models.DateTimeField(blank=True, null=True)),
                ('greenhouse_end_time', models.DateTimeField(blank=True, null=True)),
                ('weather_datetime_utc', models.OneToOneField(db_column='weather_datetime_utc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='appEMS.weatherinfo')),
                ('par', models.DecimalField(blank=True, db_column='PAR', decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'green_house',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HydrogenBox',
            fields=[
                ('hydrogen_production_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('hydrogen_storage_capacity', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('hydrogen_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('hydrogen_pressure', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('hydrogen_start_time', models.DateTimeField(blank=True, null=True)),
                ('hydrogen_end_time', models.DateTimeField(blank=True, null=True)),
                ('weather_datetime_utc', models.OneToOneField(db_column='weather_datetime_utc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='appEMS.weatherinfo')),
            ],
            options={
                'db_table': 'hydrogen_box',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Multimetro',
            fields=[
                ('phase_current_l1', models.DecimalField(blank=True, db_column='phase_current_L1', decimal_places=2, max_digits=5, null=True)),
                ('phase_current_l2', models.DecimalField(blank=True, db_column='phase_current_L2', decimal_places=2, max_digits=5, null=True)),
                ('phase_current_l3', models.DecimalField(blank=True, db_column='phase_current_L3', decimal_places=2, max_digits=5, null=True)),
                ('frequency', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('total_active_power', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('active_power_l1', models.DecimalField(blank=True, db_column='active_power_L1', decimal_places=2, max_digits=5, null=True)),
                ('active_power_l2', models.DecimalField(blank=True, db_column='active_power_L2', decimal_places=2, max_digits=5, null=True)),
                ('active_power_l3', models.DecimalField(blank=True, db_column='active_power_L3', decimal_places=2, max_digits=5, null=True)),
                ('line_voltage_l1_l2', models.DecimalField(blank=True, db_column='line_voltage_L1_L2', decimal_places=2, max_digits=5, null=True)),
                ('line_voltage_l1_n', models.DecimalField(blank=True, db_column='line_voltage_L1_N', decimal_places=2, max_digits=5, null=True)),
                ('line_voltage_l2_l3', models.DecimalField(blank=True, db_column='line_voltage_L2_L3', decimal_places=2, max_digits=5, null=True)),
                ('line_voltage_l2_n', models.DecimalField(blank=True, db_column='line_voltage_L2_N', decimal_places=2, max_digits=5, null=True)),
                ('line_voltage_l3_l1', models.DecimalField(blank=True, db_column='line_voltage_L3_L1', decimal_places=2, max_digits=5, null=True)),
                ('line_voltage_l3_n', models.DecimalField(blank=True, db_column='line_voltage_L3_N', decimal_places=2, max_digits=5, null=True)),
                ('timestamp_utc', models.OneToOneField(db_column='timestamp_utc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='appEMS.weatherinfo')),
            ],
            options={
                'db_table': 'multimetro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pyrogasifier',
            fields=[
                ('pyro_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('pyro_pressure', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('pyro_flow_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('pyro_start_time', models.DateTimeField(blank=True, null=True)),
                ('pyro_end_time', models.DateTimeField(blank=True, null=True)),
                ('weather_datetime_utc', models.OneToOneField(db_column='weather_datetime_utc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='appEMS.weatherinfo')),
            ],
            options={
                'db_table': 'pyrogasifier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SolarThermal',
            fields=[
                ('solar_collector_area', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('solar_efficiency', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('solar_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('solar_energy_production', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('solar_start_time', models.DateTimeField(blank=True, null=True)),
                ('solar_end_time', models.DateTimeField(blank=True, null=True)),
                ('weather_datetime_utc', models.OneToOneField(db_column='weather_datetime_utc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='appEMS.weatherinfo')),
            ],
            options={
                'db_table': 'solar_thermal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FotoVoltaicoFinance',
            fields=[
                ('datetime_utc', models.OneToOneField(db_column='datetime_utc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='appEMS.fotovoltaico')),
                ('plant_name', models.CharField(blank=True, max_length=255, null=True)),
                ('revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('expenses', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('profit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'foto_voltaico_finance',
                'managed': False,
            },
        ),
    ]
